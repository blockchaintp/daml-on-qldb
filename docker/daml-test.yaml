# Copyright 2019 Blockchain Technology Partners
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

version: "2.1"

services:

  postgres:
    image: postgres
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
    volumes:
        # copy the sql script to create tables
        - ./sql/create_databases.sql:/docker-entrypoint-initdb.d/create_databases.sql
  daml-on-qldb:
    image: daml-on-qldb:${ISOLATION_ID}
    environment:
      - AWS_REGION
      - AWS_SECRET_ACCESS_KEY
      - AWS_ACCESS_KEY
      - AWS_ACCESS_KEY_ID
      - LEDGER_NAME
    expose:
      - 9000
    ports:
      - "9000:9000"
    entrypoint: "bash -xc \"\
      env;
      /opt/daml-on-qldb/entrypoint.sh  \
        --createaws true \
        --region $$AWS_REGION \
        --ledger $$LEDGER_NAME \
        --txlogstore \"jdbc:postgresql://postgres/qldb_txblobs?user=postgres\" \
        --participant participant-id=test-participant,port=9000,address=0.0.0.0 \
        `ls /opt/daml-on-qldb/dar/*.dar`\""
    volumes:
      - /dev/urandom:/dev/random
      - /dev/urandom:/dev/urandom
      - ../test-dars:/opt/daml-on-qldb/dar/
    depends_on:
      - postgres
  # Run the integration tests at most twice to compensate for "piming the pump"
  ledger-api-testtool-qldb:
    image: ledger-api-testtool:${ISOLATION_ID}
    # LotsOfPartiesIT - excluded since tests in there doesn't respect the concurrent runs, and just
    #                   blast a ton of concurrent requests, which though they get processes, cannot currently(possibly)
    #                   be processed in time to pass
    # PartyManagementServiceIT - Currently returning INTERNAL: None.get on some tests
    # PackageManagementService - test appears to fail because of overly ambitious concurrency goals
    # TimeIT - this is never going to pass on daml-on-qldb, since it is testing for a testing feature we don't
    #          support (setting time)
    # TransactionServiceIT - not clear why this fails, certain tests report "RESOURCE_EXHAUSTED" and thats all we get so
    #                        far
    entrypoint: "bash -xc \"\
      sleep 120  && \
      java -jar ledger-api-test-tool.jar \
        --timeout-scale-factor 1 \
        --concurrent-test-runs 8 \
        daml-on-qldb:9000 \
        || \
      java -jar ledger-api-test-tool.jar \
        --timeout-scale-factor 1 \
        --concurrent-test-runs 4 \
        daml-on-qldb:9000 \
        || \
      java -jar ledger-api-test-tool.jar \
        --timeout-scale-factor 1 \
        --concurrent-test-runs 2 \
        daml-on-qldb:9000 \
        || \
      java -jar ledger-api-test-tool.jar \
        --timeout-scale-factor 1 \
        --concurrent-test-runs 1 \
        daml-on-qldb:9000 \
        \""
    depends_on:
      - daml-on-qldb
    volumes:
      - /dev/urandom:/dev/random
      - /dev/urandom:/dev/urandom
