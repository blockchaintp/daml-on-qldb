Configuration:
  # Initial log level after loading configuration
  status: info
  name: TEST
  monitorInterval: 30
  Properties:
  Appenders:
    File:
      # logging to a file for testing where a complete human readable, and detail level log is required
      - name: TEST_FILE
        fileName: target/test.log
        PatternLayout:
          # level, date and time, thread, full class name and line number,  message
          pattern: "[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] [%C{10}:%L] - %msg%n"
      # logging to a file for testing where a complete and detailed but not easily readable, log is required
      - name: TEST_JSON_FILE
        fileName: target/test-json.log
        JsonTemplateLayout:
          eventTemplateUri: classpath:log4j-json-layout.json
    Console:
      # For console logging during normal runs where detailed info about the code
      # is not desirable (no performance impact)
      - name: CONSOLE
        target: SYSTEM_OUT
        PatternLayout:
          # Level, thread, simple logger name, message
          pattern: "[%-5level] [%t] [%c{1}] - %msg%n"
      # For console logging while testing where timestamps are not needed
      # but detail about the code are (performance impact)
      - name: TEST_CONSOLE
        target: SYSTEM_OUT
        PatternLayout:
          # level, class shortname, line number, message
          pattern: "[%-5level] [%C{1}:%L] - %msg%n"
      # For logging json to a console, such as in a container
      - name: JSON_CONSOLE
        target: SYSTEM_OUT
        JsonTemplateLayout:
          eventTemplateUri: classpath:log4j-json-layout.json
  Loggers:
    Root:
      # Items not otherwise classified are recorded in test logs for forensics
      level: info
      AppenderRef:
        - ref: TEST_FILE
        - ref: TEST_JSON_FILE
    Logger:
      # Log what we are interested in at the root and the console
      - name: com.blockchaintp
        level: debug
        AppenderRef:
          - ref: TEST_CONSOLE
