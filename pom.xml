<?xml version="1.0" encoding="UTF-8" ?>
<!-- * Copyright 2019 Blockchain Technology Partners * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. -->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>daml-on-qldb</groupId>
  <artifactId>daml-on-qldb</artifactId>
  <version>0.1.5-SNAPSHOT</version>
  <name>DAML on QLDB</name>
  <packaging>jar</packaging>
  <description>Implementation of DAML SDK with a QLDB backend</description>
  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <release>11</release>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>6.2</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>jdk8</id>
      <activation>
        <jdk>1.8</jdk>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>versions-maven-plugin</artifactId>
            <version>2.8.1</version>
          </plugin>
          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
              <classifier>jdk8</classifier>
              <archive>
                <manifest>
                  <addClasspath>true</addClasspath>
                  <mainClass>com.blockchaintp.daml.qldb.Main$</mainClass>
                </manifest>
              </archive>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven.compiler.plugin.version}</version>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
              <testSource>1.8</testSource>
              <testTarget>1.8</testTarget>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <properties></properties>
    </profile>
  </profiles>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <protobuf.version>3.17.3</protobuf.version>
    <daml.sdk.version>1.15.0</daml.sdk.version>
    <scala.lang.version>2.13</scala.lang.version>
  </properties>
  <dependencyManagement>
    <dependencies>

      <!-- Protocol buffer dependencies -->
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobuf.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java-util</artifactId>
        <version>${protobuf.version}</version>
      </dependency>

      <!-- DAML Dependencies -->
      <dependency>
        <groupId>com.daml</groupId>
        <artifactId>participant-state_${scala.lang.version}</artifactId>
        <version>${daml.sdk.version}</version>
      </dependency>
      <dependency>
        <groupId>com.daml</groupId>
        <artifactId>participant-state-kvutils_${scala.lang.version}</artifactId>
        <version>${daml.sdk.version}</version>
      </dependency>
      <dependency>
        <groupId>com.daml</groupId>
        <artifactId>participant-state-kvutils-app_${scala.lang.version}</artifactId>
        <version>${daml.sdk.version}</version>
      </dependency>
      <dependency>
        <groupId>com.daml</groupId>
        <artifactId>participant-state-index_${scala.lang.version}</artifactId>
        <version>${daml.sdk.version}</version>
      </dependency>
      <dependency>
        <groupId>com.daml</groupId>
        <artifactId>ledger-api-auth_${scala.lang.version}</artifactId>
        <version>${daml.sdk.version}</version>
      </dependency>
      <dependency>
        <groupId>com.daml</groupId>
        <artifactId>sandbox_${scala.lang.version}</artifactId>
        <version>${daml.sdk.version}</version>
      </dependency>
      <dependency>
        <groupId>com.daml</groupId>
        <artifactId>ledger-api-common_${scala.lang.version}</artifactId>
        <version>${daml.sdk.version}</version>
      </dependency>

      <!-- Logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>2.0.0-alpha2</version>
      </dependency>
      <!-- Include the SLF4j bindings only in test and Main packages not libraries -->
      <dependency>
        <groupId>kr.pe.kwonnam.slf4j-lambda</groupId>
        <artifactId>slf4j-lambda-core</artifactId>
        <version>0.1</version>
      </dependency>
      <dependency>
        <!-- Needed implicitly for log4j2 YAML configuration -->
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>2.13.0-rc1</version>
      </dependency>
      <dependency>
        <!-- Needed implicitly for log4j2 YAML configuration -->
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.13.0-rc1</version>
      </dependency>
      <dependency>
        <!-- Needed implicitly for log4j2 YAML configuration -->
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>2.13.0-rc1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j18-impl</artifactId>
        <version>2.14.1</version>
      </dependency>
      <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-layout-template-json</artifactId>
          <version>2.14.1</version>
      </dependency>

      <!-- Resilience -->
      <dependency>
        <groupId>io.github.resilience4j</groupId>
        <artifactId>resilience4j-circuitbreaker</artifactId>
        <version>1.7.1</version>
      </dependency>
      <dependency>
        <groupId>io.github.resilience4j</groupId>
        <artifactId>resilience4j-retry</artifactId>
        <version>1.7.1</version>
      </dependency>
      <dependency>
        <groupId>io.github.resilience4j</groupId>
        <artifactId>resilience4j-rxjava3</artifactId>
        <version>1.7.1</version>
        <exclusions>
          <exclusion>
            <groupId>io.reactivex.rxjava3</groupId>
            <artifactId>rxjava</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- Apache Commons and Useful things -->
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>1.4</version>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>2.4.0-b180830.0359</version>
      </dependency>

      <!-- AWS SDK  -->
        <dependency>
          <groupId>software.amazon.awssdk</groupId>
          <artifactId>bom</artifactId>
          <version>2.17.13</version>
          <type>pom</type>
          <scope>import</scope>
        </dependency>

      <!-- AWS QLDB -->
      <dependency>
        <groupId>software.amazon.qldb</groupId>
        <artifactId>amazon-qldb-driver-java</artifactId>
        <version>2.3.1</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-ion</artifactId>
        <version>2.13.0-rc1</version>
      </dependency>


      <dependency>
        <groupId>io.reactivex.rxjava3</groupId>
        <artifactId>rxjava</artifactId>
        <version>3.0.13</version>
      </dependency>

      <!-- Test deps -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>5.8.0-M1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>3.11.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>3.11.2</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>

    <!-- Logging -->
    <!-- SLF4J Bindings should only be included in "main" projects and test scope -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>kr.pe.kwonnam.slf4j-lambda</groupId>
      <artifactId>slf4j-lambda-core</artifactId>
    </dependency>
    <dependency>
      <!-- Needed implicitly for log4j2 YAML configuration -->
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- Needed implicitly for log4j2 YAML configuration -->
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- Needed implicitly for log4j2 YAML configuration -->
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j18-impl</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-layout-template-json</artifactId>
        <scope>test</scope>
    </dependency>


    <!-- Rx -->
    <dependency>
      <groupId>io.reactivex.rxjava3</groupId>
      <artifactId>rxjava</artifactId>
    </dependency>
    <!-- AWS -->
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>netty-nio-client</artifactId>
    </dependency>
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>s3</artifactId>
    </dependency>
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>qldb</artifactId>
    </dependency>
    <dependency>
      <groupId>software.amazon.qldb</groupId>
      <artifactId>amazon-qldb-driver-java</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-ion</artifactId>
    </dependency>

    <!-- Protobuf -->
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java-util</artifactId>
    </dependency>

    <!-- Netty -->


    <!-- DAML Dependencies -->
      <dependency>
        <groupId>com.daml</groupId>
        <artifactId>participant-state_${scala.lang.version}</artifactId>
      </dependency>
      <dependency>
        <groupId>com.daml</groupId>
        <artifactId>participant-state-kvutils_${scala.lang.version}</artifactId>
      </dependency>
      <dependency>
        <groupId>com.daml</groupId>
        <artifactId>participant-state-kvutils-app_${scala.lang.version}</artifactId>
      </dependency>
      <dependency>
        <groupId>com.daml</groupId>
        <artifactId>participant-state-index_${scala.lang.version}</artifactId>
      </dependency>
      <dependency>
        <groupId>com.daml</groupId>
        <artifactId>ledger-api-auth_${scala.lang.version}</artifactId>
      </dependency>
      <dependency>
        <groupId>com.daml</groupId>
        <artifactId>sandbox_${scala.lang.version}</artifactId>
      </dependency>


    <!-- Test deps -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
    </dependency>

    <!-- Resilience -->
    <dependency>
      <groupId>io.github.resilience4j</groupId>
      <artifactId>resilience4j-circuitbreaker</artifactId>
    </dependency>
    <dependency>
      <groupId>io.github.resilience4j</groupId>
      <artifactId>resilience4j-retry</artifactId>
    </dependency>
    <dependency>
      <groupId>io.github.resilience4j</groupId>
      <artifactId>resilience4j-rxjava3</artifactId>
    </dependency>
  </dependencies>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.0</version>
      </extension>
    </extensions>
    <resources>
        <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
        </resource>
    </resources>
    <testResources>
        <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
        </testResource>
    </testResources>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.12.1</version>
          <configuration>
            <encoding>UTF-8</encoding>
            <formats>
              <!-- you can define as many formats as you want, each is independent -->
              <format>
                <!-- define the files to apply to -->
                <includes>
                  <include>*.md</include>
                  <include>.gitignore</include>
                </includes>
                <!-- define the steps to apply to those files -->
                <toggleOffOn />
                <trimTrailingWhitespace/>
                <endWithNewline/>
                <indent>
                  <tabs>false</tabs>
                  <spaces>true</spaces>
                  <spacesPerTab>2</spacesPerTab>
                </indent>
              </format>
            </formats>
            <!-- language-specific formats -->
            <java>
              <eclipse>
                <file>${basedir}/.eclipse-formatter.xml</file>
              </eclipse>
              <licenseHeader>
                <file>${basedir}/.copyright-header-cstyle.txt</file>
                <delimiter>package </delimiter>
              </licenseHeader>
              <toggleOffOn />
            </java>
            <ratchetFrom>origin/btp-releases/1-13</ratchetFrom>
            <scala>
              <includes>
                <include>src/main/scala/**/*.scala</include>
                <include>src/test/scala/**/*.scala</include>
              </includes>
              <scalafmt>
                <version>2.7.5</version>
                <file>${basedir}/.scalafmt.conf</file>
              </scalafmt>
              <licenseHeader>
                <file>${basedir}/.copyright-header-cstyle.txt</file>
                <delimiter>package </delimiter>
              </licenseHeader>
            </scala>
          </configuration>
          <executions>
            <execution>
              <?m2e execute onConfiguration,onIncremental?>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>compile</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M5</version>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>4.5.3</version>
          <executions>
            <execution>
              <?m2e execute onConfiguration,onIncremental?>
              <goals>
                <goal>compile</goal>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>3.1.1</version>
          <executions>
            <execution>
              <?m2e execute onConfiguration,onIncremental?>
              <phase>compile</phase>
              <goals>
                <goal>jxr</goal>
                <goal>test-jxr</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.1.2</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>8.44</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>validate</id>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <encoding>UTF-8</encoding>
            <configLocation>checkstyle.xml</configLocation>
            <headerLocation>LICENSE.txt</headerLocation>
            <consoleOutput>true</consoleOutput>
            <failOnViolation>true</failOnViolation>
            <violationSeverity>warning</violationSeverity>
            <sourceDirectories>
              <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
            </sourceDirectories>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.xolstice.maven.plugins</groupId>
          <artifactId>protobuf-maven-plugin</artifactId>
          <version>0.6.1</version>
          <configuration>
            <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
            </protocArtifact>
            <useArgumentFile>true</useArgumentFile>
            <checkStaleness>true</checkStaleness>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>compile</goal>
                <goal>test-compile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.3.0</version>
          <configuration>
            <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
            <doclet>nl.talsmasoftware.umldoclet.UMLDoclet</doclet>
            <docletArtifact>
                <groupId>nl.talsmasoftware</groupId>
                <artifactId>umldoclet</artifactId>
                <version>2.0.12</version>
            </docletArtifact>
            <additionalOptions>
              <additionalOption>-createPumlFiles</additionalOption>
            </additionalOptions>
          </configuration>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>3.0.1</version>
          <executions>
            <execution>
              <id>sign-artifacts</id>
              <goals>
                <goal>sign</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.3.0</version>
          <configuration>
            <descriptors>
              <descriptor>src/main/assembly/assembly.xml</descriptor>
            </descriptors>
          </configuration>
          <executions>
            <execution>
              <id>make-assembly</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.7</version>
            <executions>
                <execution>
                    <goals>
                        <goal>prepare-agent</goal>
                    </goals>
                </execution>
                <execution>
                    <id>report</id>
                    <phase>verify</phase>
                    <goals>
                        <goal>report</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>
      <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>com.blockchaintp.daml.qldb.Main</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project>
